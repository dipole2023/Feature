package com.demoshop.pages;


import com.demoshop.main.FunLibrary;

public class ComputerPage extends FunLibrary {

	/**
	 * Please see documentation @https://github.com/dipole2023/Main/wiki/ComputerPage-Methods for help.
	*/


	/*
	 * As these methods are called they will add the price of an accessory (i.e. 4gb RAM = $40) to totalPrice.
	 * At checkout, totalPrice will be compared to the price calculated by the web page.
	 * Will follow the following pseudo-code: 
	 * if totalPrice does not equal the price generated by the webstore.
	 * 	Fail the test case.
	 * if totalPrice does equal the price generated by the webstore.
	 * 	Pass the test case.
	 */
	private Double totalPrice = 0.0;
	
	// Waits for the computer tab to appear on the store page and click it.
	public ComputerPage computerLink() {
		Click_Button_Xpath(OR_OR.getProperty("computerlink"), "Computer link");
		return this;
	}
	
	public ComputerPage selectDesktopComputer() {
		Click_Button_Xpath(OR_OR.getProperty("desktopoption"), "Desktop Option");
		return this;
	}
	
	public ComputerPage selectNotebookComputer() {
		Click_Button_Xpath(OR_OR.getProperty("notebookoptions"), "Notebook Option");
		return this;
	}
	
	/*
	 * Computer Store
	 */
	
	public ComputerPage selectDesktopType(String type) {

		switch(type) {

			case "cheap":
				
				Click_Button_Xpath(OR_OR.getProperty("cheapdesktop"), "Cheap Desktop");
				totalPrice += 800;
				break;

			case "expensive":
			
				Click_Button_Xpath(OR_OR.getProperty("expensivedesktop"), "Expensive Desktop");
				totalPrice += 1800.0;
				break;

			default:

				testLog.error("Unable to select desired RAM type, check xpaths.");
				break;
		}

		return this;
	}

/**
*  Computer parts & accessories.
*/

	/*
	 * CPU
	 */
	public ComputerPage selectCpu(String type) {

		switch (type) {
			case "slow":
				Click_Button_Xpath(OR_OR.getProperty("slowcpu"), "Slow CPU");
				totalPrice += 0.0;
				break;
			
			case "medium":
				Click_Button_Xpath(OR_OR.getProperty("mediumcpu"), "Medium CPU");
				totalPrice += 15.00;
				break;

			case "fast":
				Click_Button_Xpath(OR_OR.getProperty("fastcpu"), "Medium CPU");
				totalPrice += 100.00;
				break; 

			default:
				testLog.error("Unable to select desired CPU type, check xpaths.");
				break;
		}

		testLog.info("$" + totalPrice); // Remove.
		return this;
	}

	/*
	 * RAM 
	 */

	 public ComputerPage selectRam(String type) {

		switch (type) {
			case "2gb":
				Click_Button_Xpath(OR_OR.getProperty("2gbram"), "2GB RAM");
				totalPrice += 0.0;
				break;
			
			case "4gb":
				Click_Button_Xpath(OR_OR.getProperty("4gbram"), "4GB RAM");
				totalPrice += 20.00;
				break;

			case "8gb":
				Click_Button_Xpath(OR_OR.getProperty("8gbram"), "8GB RAM");
				totalPrice += 60.00;
				break; 

			default:
				testLog.error("Unable to select desired RAM type, check xpaths.");
				break;
		}

		testLog.info("$" + totalPrice); // Remove.
		return this;
	}
	 
	 public ComputerPage selectHdd(String size) {
		 
		 switch (size) {
		 	
		 case "320gb":
			 Click_Button_Xpath(OR_OR.getProperty("320gb"), "320GB HDD");
			 totalPrice += 0.00;
			 break;
		 
		 case "400gb":
			 Click_Button_Xpath(OR_OR.getProperty("400gb"), "400GB HDD");
			 totalPrice += 100.00;
			 break;
		

		default:
			testLog.error("Unable to select desired HDD type, check xpaths.");
			break;
			 
		 }
		 
		 testLog.info("$" + totalPrice); // Remove.
		 return this; 
	 }
	 
	 public ComputerPage selectSoftware(Boolean imageViewer, Boolean officeSuite, Boolean otherOfficeSuite) {
		
		if (imageViewer == true) {
			 Click_Button_Xpath(OR_OR.getProperty("imageviewer"), "Image Viewer");
			 totalPrice += 5.0;
		} if(officeSuite == true) {
			Click_Button_Xpath(OR_OR.getProperty("officesuite"), "Office Suite");
			 totalPrice += 100.0;
		} if(otherOfficeSuite == true) {
			Click_Button_Xpath(OR_OR.getProperty("otherofficesuite"), "Other Office Suite");
			 totalPrice += 40.0;
		}
		 testLog.info("$" + totalPrice);
		 return this;
	 }
	 
	 
	 //TODO: Fix this method.
	 public ComputerPage quantity(Integer num) {
		//Click_Button_Xpath(OR_OR.getProperty("quantity"), "quantity");
		Sendkey_xpath("quantity", num.toString(), "Quantity");
		return this;
	 }
	 
	 public ComputerPage addToCart() {
		 Click_Button_Xpath(OR_OR.getProperty("addtocart"), "Add to Cart");
		 return this;
	 }
}
